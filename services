#!/usr/bin/env bash
#
# The main entry point script to utilise the various commands
#
# Please see https://github.com/qcr/services for full details on how
# things work


#################
### VARIABLES ###
#################

# Directory for this script
SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"


#################
### FUNCTIONS ###
#################

function print_usage(){
    printf "\nRuns the QCR Services tool.
    
Usage:
    services <command> <arguments>

Arguments:
    <command>       the QCR service command to run.
    <arguments>     the arguments for the QCR service command.

Commands:
" 

    CMDS="$(get_commands)"
    for i in ${CMDS[@]}; do
        printf "    > $i\n"
    done

}

function get_commands(){
    CMDS=($(find "${SCRIPT_DIR}/scripts" -mindepth 1 -maxdepth 1 -executable -type f -not -name '*.py' -exec basename {} \;))
    echo "${CMDS[@]}"
}


############
### MAIN ###
############

# Source Common
source ${SCRIPT_DIR}/scripts/common

# Display heading
display_heading "SERVICES TOOL"


# Valid commands
VALID_CMDS="$(get_commands)"

# Parse arguments
while getopts h OPT; do
    case "${OPT}" in
        h|help) print_usage; exit ;;
        ?) print_usage; exit ;;
    esac
done

# Valid number of arguments
if [ $# -eq 0 ]; then
    print_usage
    exit
fi


# Check command argument is valid
ARGS=( "$@" )
CMD=${ARGS[0]}
if [[ ! " ${VALID_CMDS[*]} " =~ " ${CMD} "  ]]; then
    printf "${ERROR}The command ${YELLOW}${CMD}${RESET} does not exist.\n"
    print_usage
    exit
fi

# Get sub-script and arguments
CMD=${ARGS[0]}
ARGS_LIST=${ARGS[@]:1}

# Print to terminal what is being called
if [ ${#ARGS_LIST[@]} == 1 ] && [ "${ARGS_LIST[0]}" == "" ]; then
    printf "${INFO}Calling '${YELLOW}${SCRIPT_DIR}/scripts/${CMD}${RESET}' with no arguments\n\n"
else
    printf "${INFO}Calling '${YELLOW}${SCRIPT_DIR}/scripts/${CMD}${RESET}' with arguments '${YELLOW}${ARGS[@]:1}${RESET}'\n\n"
fi

# Run tool
/bin/bash ${SCRIPT_DIR}/scripts/${CMD} ${ARGS_LIST[@]}
